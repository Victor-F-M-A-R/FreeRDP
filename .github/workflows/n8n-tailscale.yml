name: n8n via Tailscale (Ubuntu runner)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */5 * * *"  # reinicia a cada ~5h

concurrency:
  group: n8n-actions-runner
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: üîß Instalar Tailscale via APT (oficial)
        run: |
          set -e
          . /etc/os-release
          CODENAME="${VERSION_CODENAME}"
          curl -fsSL "https://pkgs.tailscale.com/stable/ubuntu/${CODENAME}.noarmor.gpg" | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
          curl -fsSL "https://pkgs.tailscale.com/stable/ubuntu/${CODENAME}.tailscale-keyring.list" | sudo tee /etc/apt/sources.list.d/tailscale.list >/dev/null
          sudo apt-get update -y
          sudo apt-get install -y tailscale

      - name: ‚ôªÔ∏è Restaurar estado do Tailscale (fixa o device/IP)
        uses: actions/cache@v4
        with:
          path: /var/lib/tailscale/tailscaled.state
          key: tailscale-state-v1

      - name: ‚ñ∂Ô∏è Iniciar daemon do Tailscale com estado persistente
        run: |
          sudo mkdir -p /var/lib/tailscale
          sudo nohup tailscaled --state=/var/lib/tailscale/tailscaled.state >/tmp/tailscaled.log 2>&1 &

      - name: üîê Conectar ao Tailnet (usa a mesma identidade restaurada)
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          sudo tailscale up \
            --authkey "${TAILSCALE_AUTH_KEY}" \
            --hostname "n8n-server" \
            --accept-routes \
            --accept-dns
          echo "Tailscale IPv4: $(tailscale ip -4)"

      - name: üê≥ Instalar Docker (se faltar)
        run: |
          if ! command -v docker >/dev/null 2>&1; then
            curl -fsSL https://get.docker.com | sh
            sudo usermod -aG docker $USER
          fi

      - name: üöÄ Subir n8n (usa Neon para persistir)
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          N8N_ENCRYPTION_KEY: ${{ secrets.N8N_ENCRYPTION_KEY }}
        run: |
          docker rm -f n8n || true
          docker pull docker.n8n.io/n8nio/n8n:latest
          docker run -d --name n8n \
            -p 5678:5678 \
            -e DB_TYPE=postgresdb \
            -e DB_POSTGRESDB_HOST="$DB_HOST" \
            -e DB_POSTGRESDB_PORT="$DB_PORT" \
            -e DB_POSTGRESDB_DATABASE="$DB_NAME" \
            -e DB_POSTGRESDB_USER="$DB_USER" \
            -e DB_POSTGRESDB_PASSWORD="$DB_PASSWORD" \
            -e DB_POSTGRESDB_SCHEMA=public \
            -e DB_POSTGRESDB_SSL_ENABLED=true \
            -e DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED=true \
            -e N8N_ENCRYPTION_KEY="$N8N_ENCRYPTION_KEY" \
            -e TZ=America/Sao_Paulo \
            docker.n8n.io/n8nio/n8n:latest
          docker ps

      - name: üåê Mostrar endere√ßo de acesso
        run: |
          echo "Acesse via MagicDNS (Tailscale):  http://n8n-server.tail255505.ts.net:5678"
          echo "Ou pelo IPv4 do tailscale acima (porta 5678)."

      - name: üí§ Manter vivo por ~5h30
        run: |
          sleep $((5*3600 + 30*60))
