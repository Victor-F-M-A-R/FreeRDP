name: RDP + n8n (Windows runner)

on:
  workflow_dispatch:
schedule:
  - cron: "0 */6 * * *"
concurrency:
  group: rdp-n8n-persistente
  cancel-in-progress: true

jobs:
  secure-rdp-and-n8n:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      # 0) Restaurar state do Tailscale (mantém identidade/IP entre execuções)
      - name: Restore Tailscale state (cache)
        uses: actions/cache/restore@v4
        with:
          path: C:\tailscale.state
          key: tailscale-state-v1

      # 1) RDP + firewall
      - name: Configure Core RDP Settings
        shell: pwsh
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name 'fDenyTSConnections' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'UserAuthentication' -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name 'SecurityLayer' -Value 0 -Force
          netsh advfirewall firewall delete rule name='RDP-Tailscale' | Out-Null
          netsh advfirewall firewall add rule name='RDP-Tailscale' dir=in action=allow protocol=TCP localport=3389 | Out-Null
          Restart-Service -Name TermService -Force

      # 2) Usuário RDP
      - name: Create RDP User with Secure Password
        shell: pwsh
        run: |
          Add-Type -AssemblyName System.Security
          $U=[char[]](65..90);$L=[char[]](97..122);$N=[char[]](48..57);$S=([char[]](33..47)+[char[]](58..64)+[char[]](91..96)+[char[]](123..126))
          $raw=@();$raw+=$U|Get-Random -Count 4;$raw+=$L|Get-Random -Count 4;$raw+=$N|Get-Random -Count 4;$raw+=$S|Get-Random -Count 4
          $pwd = -join ($raw | Sort-Object { Get-Random })
          $sec = ConvertTo-SecureString $pwd -AsPlainText -Force
          if (-not (Get-LocalUser -Name 'RDP' -ErrorAction SilentlyContinue)) { New-LocalUser -Name 'RDP' -Password $sec -AccountNeverExpires } else { Set-LocalUser -Name 'RDP' -Password $sec }
          Add-LocalGroupMember -Group 'Administrators' -Member 'RDP' -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group 'Remote Desktop Users' -Member 'RDP' -ErrorAction SilentlyContinue
          "RDP_CREDS=User: RDP | Password: $pwd" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "=== RDP ACCESS ==="; Write-Host "User: RDP"; Write-Host "Pass: $pwd"

      # 3) Tailscale MSI
      - name: Install Tailscale
        shell: pwsh
        run: |
          $url = 'https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi'
          $msi = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $msi
          Start-Process msiexec.exe -ArgumentList '/i', "`"$msi`"", '/quiet', '/norestart' -Wait
          Remove-Item $msi -Force

      # 4) Tailscale up com state + hostname fixo
      - name: Establish Tailscale Connection
        shell: pwsh
        env:
          TS_AUTH: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          $ts = "$env:ProgramFiles\Tailscale\tailscale.exe"
          if (-not (Test-Path 'C:\tailscale.state')) { New-Item -ItemType File -Path 'C:\tailscale.state' | Out-Null }
          & $ts up --authkey="$env:TS_AUTH" --state='C:\tailscale.state' --hostname='n8n-server' --accept-dns=true --accept-routes=true
          $ip = & $ts ip -4
          "TAILSCALE_IP=$ip" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "Tailscale IP: $ip"

      # 5) Salvar/atualizar o state no cache
      - name: Save Tailscale state (cache)
        uses: actions/cache/save@v4
        with:
          path: C:\tailscale.state
          key: tailscale-state-v1

      # 6) Pasta e firewall do n8n
      - name: Prepare n8n folder and firewall
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path 'C:\n8n' -ErrorAction SilentlyContinue | Out-Null
          New-Item -ItemType Directory -Path 'C:\n8n\data' -ErrorAction SilentlyContinue | Out-Null
          netsh advfirewall firewall delete rule name='n8n-5678' | Out-Null
          netsh advfirewall firewall add rule name='n8n-5678' dir=in action=allow protocol=TCP localport=5678 | Out-Null

      # 7) .env do n8n (sem here-string → menos chance de erro YAML)
      - name: Create .env for n8n
        shell: pwsh
        run: |
          $lines = @(
            'N8N_BASIC_AUTH_ACTIVE=true',
            'N8N_BASIC_AUTH_USER=n8nadmin',
            'N8N_BASIC_AUTH_PASSWORD=HyIkL9hC0fQtFzN91',
            'N8N_ENCRYPTION_KEY=7e5ba0b2d6a24c4483c891079f5004f4ac6b0e83678648a6b3ed11f3f6abcb56',
            'GENERIC_TIMEZONE=America/Sao_Paulo',
            'WEBHOOK_URL=http://n8n-server.tail255505.ts.net:5678',
            'DB_TYPE=postgresdb',
            'DB_POSTGRESDB_HOST=ep-bold-rain-ad0gbdv3-pooler.c-2.us-east-1.aws.neon.tech',
            'DB_POSTGRESDB_PORT=5432',
            'DB_POSTGRESDB_DATABASE=neondb',
            'DB_POSTGRESDB_USER=neondb_owner',
            'DB_POSTGRESDB_PASSWORD=npg_7sq8cUgWAmwh',
            'DB_POSTGRESDB_SSL_ENABLED=true',
            'DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED=false'
          )
          Set-Content -Path 'C:\n8n\.env' -Value $lines -Encoding UTF8
          Write-Host 'C:\n8n\.env criado.'

      # 8) Node + n8n (sem Docker)
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install n8n globally
        shell: pwsh
        run: npm install -g n8n

      # 9) Start n8n em background
      - name: Start n8n
        shell: pwsh
        run: |
          Get-Content -Path 'C:\n8n\.env' | ForEach-Object {
            if ($_ -and -not $_.StartsWith('#')) {
              $k = ($_ -split '=',2)[0]; $v = ($_ -split '=',2)[1]
              if ($k -and $v) { Set-Item -Path "Env:$k" -Value $v }
            }
          }
          Start-Process -NoNewWindow -FilePath 'n8n.cmd' -ArgumentList 'start' -WorkingDirectory 'C:\n8n'

      # 10) Keep alive até ~6h
      - name: Keep alive (~6h)
        shell: pwsh
        run: |
          Write-Host "`n=== ACCESS INFO ==="
          Write-Host "RDP -> $env:TAILSCALE_IP:3389  (User: RDP | Password: $env:RDP_CREDS)"
          Write-Host "n8n -> http://n8n-server.tail255505.ts.net:5678"
          Write-Host "=====================`n"
          for ($i=0; $i -lt 72; $i++) {
            Write-Host "[$(Get-Date)] Runner ativo. n8n em 5678. Tailscale $env:TAILSCALE_IP"
            Start-Sleep -Seconds 300
          }
